package ventapc;

import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author mario
 */
public class VentaPCMenu extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(VentaPCMenu.class.getName());
    
    ArrayList<Venta>listaVentas = new ArrayList();
    DefaultListModel<String> modeloListaVentas = new DefaultListModel<>();
    
    public VentaPCMenu() {
        initComponents();
        //Evito que puedan modificar el tamaño de la ventana
        this.setResizable(false);
        
        //Desactivar todos los botones, asigno el foco y establezco las opciones predeterminadas
        resetFormulario();
        
        //Asignar ActionCommand a cada boton
        ProcesaOpcionA.setActionCommand("P4 3.0 Gb");
        ProcesaOpcionB.setActionCommand("P4 3.2 Gb");
        ProcesaOpcionC.setActionCommand("P4 Celeron");
        ProcesaOpcionD.setActionCommand("AMD 650");
        
        MemoriaOpcionA.setActionCommand("128 Mb");
        MemoriaOpcionB.setActionCommand("256 Mb");
        MemoriaOpcionC.setActionCommand("512 Mb");
        MemoriaOpcionD.setActionCommand("1024 Mb");
        
        MonitorOpcionA.setActionCommand("15''");
        MonitorOpcionB.setActionCommand("17''");
        MonitorOpcionC.setActionCommand("TFT 15''");
        MonitorOpcionD.setActionCommand("TFT 17''");
        
        DiscoDuroOpcionA.setActionCommand("60 Gb");
        DiscoDuroOpcionB.setActionCommand("80 Gb");
        DiscoDuroOpcionC.setActionCommand("120 Gb");
        DiscoDuroOpcionD.setActionCommand("200 Gb");
        
        //Añado la lista como modelo para poder agregar elementos después
        listaClientes.setModel(modeloListaVentas);
        
        //Evito que se pueda cerrar el formulario con la X
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    }
    
    //Metodo para modificar los botones de Radio
    private void estadoRadioButtonGroup(boolean activar){
        //Array con los grupos
        ButtonGroup[] grupos = {GrupoProcesador,GrupoMemoria, GrupoDiscoDuro,GrupoMonitor};
        //Recorro el array
        for (ButtonGroup grupo: grupos){
            Enumeration<AbstractButton> botones = grupo.getElements();
            while(botones.hasMoreElements()){
                AbstractButton b = botones.nextElement();
                b.setEnabled(activar);
            }
        }
    }
    
    //Metodo para activar todos los botones del formulario menos eliminar
    private void activarTodo(){
        comboLocalidad.setEnabled(true);
        BotonAniadir.setEnabled(true);
        BotonBuscar.setEnabled(true);
        CheckWifi.setEnabled(true);
        CheckBackUp.setEnabled(true);
        CheckGrabadora.setEnabled(true);
        CheckSinto.setEnabled(true);
        estadoRadioButtonGroup(true);
    }
    //Metodo para establecer las opciones predeterminadas
    private void opcionesPredeterminadas(){
        ProcesaOpcionA.setSelected(true);
        MemoriaOpcionD.setSelected(true);
        MonitorOpcionD.setSelected(true);
        DiscoDuroOpcionD.setSelected(true);
        comboLocalidad.setSelectedIndex(0);
        CheckGrabadora.setSelected(true);
        CheckWifi.setSelected(true);
        CheckSinto.setSelected(false);
        CheckBackUp.setSelected(false);
    }
    
    //Metodo para resetear el formulario
    private void resetFormulario(){
        textoNombre.setText("");
        BotonAniadir.setEnabled(false);
        BotonBuscar.setEnabled(false);
        BotonEliminar.setEnabled(false);
        CheckWifi.setEnabled(false);
        CheckBackUp.setEnabled(false);
        CheckGrabadora.setEnabled(false);
        CheckSinto.setEnabled(false);
        comboLocalidad.setEnabled(false);
        estadoRadioButtonGroup(false);
        opcionesPredeterminadas();
        textoNombre.requestFocus();
    }
    
    //Metodo para seleccionar los RadioButons de un cliente seleccionado
    private void seleccionarRadioButtons(ButtonGroup grupo, String actionCommand){
        Enumeration<AbstractButton> botones = grupo.getElements();
        while (botones.hasMoreElements()) {
            AbstractButton b = botones.nextElement();
            if (b.getActionCommand().equals(actionCommand)) {
                b.setSelected(true);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoProcesador = new javax.swing.ButtonGroup();
        GrupoMemoria = new javax.swing.ButtonGroup();
        GrupoMonitor = new javax.swing.ButtonGroup();
        GrupoDiscoDuro = new javax.swing.ButtonGroup();
        EtiquetaClientes = new javax.swing.JLabel();
        textoNombre = new javax.swing.JTextField();
        EtiquetaNombre = new javax.swing.JLabel();
        EtiquetaLocalidad = new javax.swing.JLabel();
        comboLocalidad = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaClientes = new javax.swing.JList<>();
        EtiquetaProcesador = new javax.swing.JLabel();
        EtiquetaMemoria = new javax.swing.JLabel();
        EtiquetaMonitor = new javax.swing.JLabel();
        EtiquetaDiscoDuro = new javax.swing.JLabel();
        EtiquetaDiscoDuro1 = new javax.swing.JLabel();
        ProcesaOpcionA = new javax.swing.JRadioButton();
        ProcesaOpcionB = new javax.swing.JRadioButton();
        ProcesaOpcionC = new javax.swing.JRadioButton();
        ProcesaOpcionD = new javax.swing.JRadioButton();
        MemoriaOpcionA = new javax.swing.JRadioButton();
        MemoriaOpcionB = new javax.swing.JRadioButton();
        MemoriaOpcionC = new javax.swing.JRadioButton();
        MemoriaOpcionD = new javax.swing.JRadioButton();
        MonitorOpcionD = new javax.swing.JRadioButton();
        MonitorOpcionA = new javax.swing.JRadioButton();
        MonitorOpcionB = new javax.swing.JRadioButton();
        MonitorOpcionC = new javax.swing.JRadioButton();
        DiscoDuroOpcionD = new javax.swing.JRadioButton();
        DiscoDuroOpcionA = new javax.swing.JRadioButton();
        DiscoDuroOpcionB = new javax.swing.JRadioButton();
        DiscoDuroOpcionC = new javax.swing.JRadioButton();
        CheckGrabadora = new javax.swing.JCheckBox();
        CheckWifi = new javax.swing.JCheckBox();
        CheckSinto = new javax.swing.JCheckBox();
        CheckBackUp = new javax.swing.JCheckBox();
        BotonAniadir = new javax.swing.JButton();
        BotonBuscar = new javax.swing.JButton();
        BotonEliminar = new javax.swing.JButton();
        BotonCancelar = new javax.swing.JButton();
        BotonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Venta de ordenadores");
        setName("Venta de ordenadores"); // NOI18N

        EtiquetaClientes.setText("Lista de clientes");

        textoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoNombreActionPerformed(evt);
            }
        });

        EtiquetaNombre.setText("Nombre del cliente");

        EtiquetaLocalidad.setText("Localidad");

        comboLocalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Villalba", "Alpedrete", "Galapagar", "Guadarrama", "Moralzarzal" }));

        listaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaClientesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(listaClientes);

        EtiquetaProcesador.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        EtiquetaProcesador.setText("Procesador");

        EtiquetaMemoria.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        EtiquetaMemoria.setText("Memoria");

        EtiquetaMonitor.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        EtiquetaMonitor.setText("Monitor");

        EtiquetaDiscoDuro.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        EtiquetaDiscoDuro.setText("DiscoDuro");

        EtiquetaDiscoDuro1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        EtiquetaDiscoDuro1.setText("Opciones");

        GrupoProcesador.add(ProcesaOpcionA);
        ProcesaOpcionA.setText("P4 3.0 Gb");

        GrupoProcesador.add(ProcesaOpcionB);
        ProcesaOpcionB.setText("P4 3.2 Gb");

        GrupoProcesador.add(ProcesaOpcionC);
        ProcesaOpcionC.setText("P4 Celeron");

        GrupoProcesador.add(ProcesaOpcionD);
        ProcesaOpcionD.setText("AMD 650");

        GrupoMemoria.add(MemoriaOpcionA);
        MemoriaOpcionA.setText("128 Mb");

        GrupoMemoria.add(MemoriaOpcionB);
        MemoriaOpcionB.setText("256 Mb");

        GrupoMemoria.add(MemoriaOpcionC);
        MemoriaOpcionC.setText("512 Mb");

        GrupoMemoria.add(MemoriaOpcionD);
        MemoriaOpcionD.setText("1024 Mb");

        GrupoMonitor.add(MonitorOpcionD);
        MonitorOpcionD.setText("TFT 17''");

        GrupoMonitor.add(MonitorOpcionA);
        MonitorOpcionA.setText("15''");

        GrupoMonitor.add(MonitorOpcionB);
        MonitorOpcionB.setText("17''");

        GrupoMonitor.add(MonitorOpcionC);
        MonitorOpcionC.setText("TFT 15''");

        GrupoDiscoDuro.add(DiscoDuroOpcionD);
        DiscoDuroOpcionD.setText("200 Gb");

        GrupoDiscoDuro.add(DiscoDuroOpcionA);
        DiscoDuroOpcionA.setText("60 Gb");

        GrupoDiscoDuro.add(DiscoDuroOpcionB);
        DiscoDuroOpcionB.setText("80 Gb");

        GrupoDiscoDuro.add(DiscoDuroOpcionC);
        DiscoDuroOpcionC.setText("120 Gb");

        CheckGrabadora.setSelected(true);
        CheckGrabadora.setText("Grabadora DVD");

        CheckWifi.setSelected(true);
        CheckWifi.setText("Wifi");

        CheckSinto.setText("Sintonizador TV");

        CheckBackUp.setText("Backup/Restore");

        BotonAniadir.setText("Añadir");
        BotonAniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAniadirActionPerformed(evt);
            }
        });

        BotonBuscar.setText("Buscar");
        BotonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarActionPerformed(evt);
            }
        });

        BotonEliminar.setText("Eliminar");
        BotonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarActionPerformed(evt);
            }
        });

        BotonCancelar.setText("Cancelar");
        BotonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCancelarActionPerformed(evt);
            }
        });

        BotonSalir.setText("Salir");
        BotonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProcesaOpcionA)
                    .addComponent(ProcesaOpcionB)
                    .addComponent(ProcesaOpcionD)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(ProcesaOpcionC)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BotonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EtiquetaNombre)
                                .addComponent(EtiquetaLocalidad)
                                .addComponent(EtiquetaProcesador))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(88, 88, 88)
                                    .addComponent(EtiquetaClientes))
                                .addComponent(comboLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(128, 128, 128)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EtiquetaMemoria)
                                .addComponent(MemoriaOpcionA)
                                .addComponent(MemoriaOpcionB)
                                .addComponent(MemoriaOpcionC)
                                .addComponent(MemoriaOpcionD))
                            .addGap(39, 39, 39)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EtiquetaMonitor)
                                .addComponent(MonitorOpcionD)
                                .addComponent(MonitorOpcionA)
                                .addComponent(MonitorOpcionB)
                                .addComponent(MonitorOpcionC))
                            .addGap(40, 40, 40)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EtiquetaDiscoDuro)
                                .addComponent(DiscoDuroOpcionA)
                                .addComponent(DiscoDuroOpcionB)
                                .addComponent(DiscoDuroOpcionC)
                                .addComponent(DiscoDuroOpcionD))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CheckSinto)
                                .addComponent(CheckWifi)
                                .addComponent(CheckGrabadora)
                                .addComponent(EtiquetaDiscoDuro1)
                                .addComponent(CheckBackUp))
                            .addGap(16, 16, 16))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(BotonAniadir, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BotonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BotonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(BotonSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EtiquetaClientes)
                            .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EtiquetaNombre))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EtiquetaLocalidad)
                            .addComponent(comboLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EtiquetaProcesador)
                    .addComponent(EtiquetaMemoria)
                    .addComponent(EtiquetaMonitor)
                    .addComponent(EtiquetaDiscoDuro)
                    .addComponent(EtiquetaDiscoDuro1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ProcesaOpcionA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProcesaOpcionB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProcesaOpcionC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProcesaOpcionD))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MemoriaOpcionA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MemoriaOpcionB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MemoriaOpcionC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MemoriaOpcionD))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MonitorOpcionA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MonitorOpcionB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MonitorOpcionC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MonitorOpcionD))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DiscoDuroOpcionA)
                            .addComponent(CheckGrabadora))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DiscoDuroOpcionB)
                            .addComponent(CheckWifi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DiscoDuroOpcionC)
                            .addComponent(CheckSinto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DiscoDuroOpcionD)
                            .addComponent(CheckBackUp))))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonAniadir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoNombreActionPerformed
        String texto = textoNombre.getText();
        if (!texto.matches("^[a-zA-ZÁÉÍÓÚáéíóúÑñ ]{1,15}$")){
            JOptionPane.showMessageDialog(this, "El nombre no es válido. \n" + 
                    "Debe contener solo letras y un máximo de 15 carácteres", "Error de validación", JOptionPane.ERROR_MESSAGE);
            textoNombre.setText("");
            resetFormulario(); //Por si ha introducido un nombre válido y luego uno mal
        } else{
            activarTodo();
            comboLocalidad.requestFocus();
        }
    }//GEN-LAST:event_textoNombreActionPerformed
    
    private void BotonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarActionPerformed
        
        int indice = listaClientes.getSelectedIndex();
        String nombreSeleccionado = listaClientes.getSelectedValue();
        if (indice == -1) {
            JOptionPane.showMessageDialog(this, "No hay ningún cliente seleccionado", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int dec = JOptionPane.showConfirmDialog(this, 
                "¿Seguro que quieres eliminar la venta seleccionada?", 
                "Confirmar eliminar venta", 
                JOptionPane.YES_NO_OPTION);
        
        if (dec == JOptionPane.YES_OPTION) {
            //Elimino de ambas listas
            listaVentas.remove(indice);
            modeloListaVentas.remove(indice);
            
            //Reseteo el formulario
            resetFormulario();
        }
    }//GEN-LAST:event_BotonEliminarActionPerformed

    private void BotonAniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAniadirActionPerformed
        String nombre = textoNombre.getText();
        String localidad = comboLocalidad.getSelectedItem().toString();
        String procesador = GrupoProcesador.getSelection().getActionCommand();
        String memoria = GrupoMemoria.getSelection().getActionCommand();
        String monitor = GrupoMonitor.getSelection().getActionCommand();
        String hdd = GrupoDiscoDuro.getSelection().getActionCommand();
        boolean grabadora=CheckGrabadora.isSelected();
        boolean wifi = CheckWifi.isSelected();
        boolean sintonizador = CheckSinto.isSelected();
        boolean backup = CheckBackUp.isSelected();
        Venta venta = new Venta(nombre,localidad,procesador,memoria,monitor,hdd,grabadora,wifi,sintonizador,backup);
        listaVentas.add(venta);
        modeloListaVentas.addElement(nombre);
        
        //Reseteo el formulario
        resetFormulario();
    }//GEN-LAST:event_BotonAniadirActionPerformed

    private void BotonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarActionPerformed
        String nombre = textoNombre.getText();
        ArrayList<Venta> listaClientesRepe = new ArrayList();
        
        //Añado los clientes que coincidan con el nombre del JText a una nueva lista
        for (Venta temp : listaVentas) {
            if (nombre.matches(temp.getNombre())) {
                listaClientesRepe.add(temp);
            }
        }
        
        //Si la lista nueva esta vacía significa que no hay nadie
        if (listaClientesRepe.isEmpty()){
            JOptionPane.showMessageDialog(this, "No se ha encontrado ninguna compra a nombre de " + nombre);
        }
        
        //Recorro la lista nueva mostrando una ventana en cada caso que coincida la venta
        int contador = 0;
        boolean seguirBuscando = true;

        while (seguirBuscando && contador < listaClientesRepe.size()) {
            Venta v = listaClientesRepe.get(contador);
            JOptionPane.showMessageDialog(this, v, 
                    "Venta " + (contador + 1) + " de " + listaClientesRepe.size(),
                    JOptionPane.INFORMATION_MESSAGE);
            contador++;

            // Si todavía quedan más ventas, pregunto si quiere seguir
            if (contador < listaClientesRepe.size()) {
                int respuesta = JOptionPane.showConfirmDialog(
                    this,
                    "¿Desea ver la siguiente venta del cliente?",
                    "Continuar búsqueda",
                    JOptionPane.YES_NO_OPTION
                );

                if (respuesta != JOptionPane.YES_OPTION) {
                    seguirBuscando = false; // sale del bucle
                }
            } else {
                JOptionPane.showMessageDialog(this, "No hay más ventas de este cliente.");
            }
        }
    }//GEN-LAST:event_BotonBuscarActionPerformed

    private void listaClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaClientesMousePressed
        //Activo boton eliminar cuando selecciona un cliente y desactivo añadir y buscar
        BotonEliminar.setEnabled(true);
        BotonAniadir.setEnabled(false);
        BotonBuscar.setEnabled(false);
        
        //Introduzco el nombre del cliente de la venta seleccionada en el JTextField
        textoNombre.setText(listaClientes.getSelectedValue());
        
        //Asigno los datos de esa venta a cada campo del formulario
        for (Venta temp : listaVentas) {
            if (temp.getNombre().matches(textoNombre.getText())) {
                comboLocalidad.setSelectedItem(temp.getLocalidad());
                seleccionarRadioButtons(GrupoProcesador,temp.getProcesaOpcion());
                seleccionarRadioButtons(GrupoMemoria,temp.getMemoriaOpcion());
                seleccionarRadioButtons(GrupoMonitor,temp.getMonitorOpcion());
                seleccionarRadioButtons(GrupoDiscoDuro,temp.getDiscoDuroOpcion());
                CheckGrabadora.setSelected(temp.isGrabadoraDVD());
                CheckWifi.setSelected(temp.isWifi());
                CheckSinto.setSelected(temp.isSintonizadorTV());
                CheckBackUp.setSelected(temp.isBackUp());
            }
        }
    }//GEN-LAST:event_listaClientesMousePressed

    private void BotonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCancelarActionPerformed
        resetFormulario();
    }//GEN-LAST:event_BotonCancelarActionPerformed

    private void BotonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSalirActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, 
                "¿Desea salir del formulario?", 
                "Confirmar salida", 
                JOptionPane.YES_NO_OPTION);
        
        if (respuesta == JOptionPane.YES_OPTION) {
            System.exit(0); //Cierra todo
        }
    }//GEN-LAST:event_BotonSalirActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new VentaPCMenu().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAniadir;
    private javax.swing.JButton BotonBuscar;
    private javax.swing.JButton BotonCancelar;
    private javax.swing.JButton BotonEliminar;
    private javax.swing.JButton BotonSalir;
    private javax.swing.JCheckBox CheckBackUp;
    private javax.swing.JCheckBox CheckGrabadora;
    private javax.swing.JCheckBox CheckSinto;
    private javax.swing.JCheckBox CheckWifi;
    private javax.swing.JRadioButton DiscoDuroOpcionA;
    private javax.swing.JRadioButton DiscoDuroOpcionB;
    private javax.swing.JRadioButton DiscoDuroOpcionC;
    private javax.swing.JRadioButton DiscoDuroOpcionD;
    private javax.swing.JLabel EtiquetaClientes;
    private javax.swing.JLabel EtiquetaDiscoDuro;
    private javax.swing.JLabel EtiquetaDiscoDuro1;
    private javax.swing.JLabel EtiquetaLocalidad;
    private javax.swing.JLabel EtiquetaMemoria;
    private javax.swing.JLabel EtiquetaMonitor;
    private javax.swing.JLabel EtiquetaNombre;
    private javax.swing.JLabel EtiquetaProcesador;
    private javax.swing.ButtonGroup GrupoDiscoDuro;
    private javax.swing.ButtonGroup GrupoMemoria;
    private javax.swing.ButtonGroup GrupoMonitor;
    private javax.swing.ButtonGroup GrupoProcesador;
    private javax.swing.JRadioButton MemoriaOpcionA;
    private javax.swing.JRadioButton MemoriaOpcionB;
    private javax.swing.JRadioButton MemoriaOpcionC;
    private javax.swing.JRadioButton MemoriaOpcionD;
    private javax.swing.JRadioButton MonitorOpcionA;
    private javax.swing.JRadioButton MonitorOpcionB;
    private javax.swing.JRadioButton MonitorOpcionC;
    private javax.swing.JRadioButton MonitorOpcionD;
    private javax.swing.JRadioButton ProcesaOpcionA;
    private javax.swing.JRadioButton ProcesaOpcionB;
    private javax.swing.JRadioButton ProcesaOpcionC;
    private javax.swing.JRadioButton ProcesaOpcionD;
    private javax.swing.JComboBox<String> comboLocalidad;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaClientes;
    private javax.swing.JTextField textoNombre;
    // End of variables declaration//GEN-END:variables
}
